<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的首个Blog</title>
    <link href="/35bd38d91fa0/"/>
    <url>/35bd38d91fa0/</url>
    
    <content type="html"><![CDATA[<h1 id="我的首个Blog"><a href="#我的首个Blog" class="headerlink" title="我的首个Blog"></a>我的首个Blog</h1><p>之前采用了<a href="https://github.com/xugaoyi/vuepress-theme-vdoing">Vdoing</a>来建立自己的第一个博客<br>但是由于繁琐的域名备案和公安备案流程，再加上Vdoing的便捷性不足以支持我的需求，所以我选择转用Hexo来创立自己的博客<br>接下来我会在Hexo上更新，并迁移到Hexo。</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何用Github Actions自动将Git Push推送到服务器</title>
    <link href="/b5cfa1556e78/"/>
    <url>/b5cfa1556e78/</url>
    
    <content type="html"><![CDATA[<h1 id="用Github-Actions自动将Git-Push推送到服务器"><a href="#用Github-Actions自动将Git-Push推送到服务器" class="headerlink" title="用Github Actions自动将Git Push推送到服务器"></a>用Github Actions自动将Git Push推送到服务器</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随手记录一下我的配置流程</p><span id="more"></span><h2 id="添加Git推送专用用户"><a href="#添加Git推送专用用户" class="headerlink" title="添加Git推送专用用户"></a>添加Git推送专用用户</h2><h3 id="创建新用户"><a href="#创建新用户" class="headerlink" title="创建新用户"></a>创建新用户</h3><p>新增一个Git推送专用用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">adduser gitdeployer<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>输出结果如下，注意其中系统会要求为新用户设置密码，设置密码完毕后会要求设置用户基本信息（姓名，房间号之类的，可以按回车跳过）</p>          </div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">~#</span><span class="language-bash"><span class="hljs-built_in">sudo</span> adduser gitdeployer</span><br>info: Adding user `gitdeployer&#x27; ...<br>info: Selecting UID/GID from range 1000 to 59999 ...<br>info: Adding new group `gitdeployer&#x27; (1000) ...<br>info: Adding new user `gitdeployer&#x27; (1000) with group `gitdeployer (1000)&#x27; ...<br>info: Creating home directory `/home/gitdeployer&#x27; ...<br>info: Copying files from `/etc/skel&#x27; ...<br>New password: <br>Retype new password: <br>passwd: password updated successfully<br>Changing the user information for gitdeployer<br>Enter the new value, or press ENTER for the default<br>        Full Name []: <br>        Room Number []: <br>        Work Phone []: <br>        Home Phone []: <br>        Other []: <br>Is the information correct? [Y/n] y<br></code></pre></td></tr></table></figure><h3 id="为新用户配置ssh密钥对"><a href="#为新用户配置ssh密钥对" class="headerlink" title="为新用户配置ssh密钥对"></a>为新用户配置ssh密钥对</h3><p>为了安全起见，我们要使用密钥对来登录，以防止受到破解及未知来源的登录<br>接下来将切换到gitdeployer，并为其创建专用密钥对</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">su - gitdeployer<br>ssh-keygen -t ed25519 -C &quot;git-deployer-key&quot; -f ~/.ssh/git_deployer<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>输入过后，系统会询问你为密钥对输入密码，这里可以不输入直接按回车跳过</p>          </div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">~$ </span><span class="language-bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;git-deployer-key&quot;</span> -f ~/.ssh/git_deployer</span><br>Generating public/private ed25519 key pair.<br>Created directory &#x27;/home/gitdeployer/.ssh&#x27;.<br>Enter passphrase (empty for no passphrase): <br>Enter same passphrase again: <br>Your identification has been saved in /home/gitdeployer/.ssh/git_deployer<br>Your public key has been saved in /home/gitdeployer/.ssh/git_deployer.pub<br>The key fingerprint is:<br>SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx git-deployer-key<br>The key&#x27;s randomart image is:<br>+--[ED25519 256]--+<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>|                 |<br>+----[SHA256]-----+<br></code></pre></td></tr></table></figure><p>在完成密钥对的生成后，还要将密钥对写入到authorized_keys中,继续在gitdeployer执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat ~/.ssh/git_deployer.pub &gt;&gt; ~/.ssh/authorized_keys<br>cat ~/.ssh/git_deployer<br></code></pre></td></tr></table></figure><h3 id="在ssh配置中允许新用户登录"><a href="#在ssh配置中允许新用户登录" class="headerlink" title="在ssh配置中允许新用户登录"></a>在ssh配置中允许新用户登录</h3><p>使用编辑器编辑ssh配置文档 &#x2F;etc&#x2F;ssh&#x2F;sshd_config ,也可以使用FinalShell等工具的文本编辑器打开并编辑<br>切换到root用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">su - root<br></code></pre></td></tr></table></figure><p>系统会要求输入root用户的密码，输入完毕后<br>备份配置文件，以防万一</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/ssh/sshd_config /etc/ssh/sshd_config.backup<br>vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><p>在配置文件中添加以下配置，注意PasswordAuthentication改为no之后，root用户将无法通过密码登录，先配置好root用户的ssh密钥对登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sshd_config">PubkeyAuthentication yes<br>PasswordAuthentication no<br>AllowUsers gitdeployer<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>如果你修改了ssh监听端口，在sshd_config里修改可能会导致端口修改不生效，可以修改以下文件的ListenStream配置</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs abnf">/usr/lib/systemd/system/ssh.socket<br><br>[Socket]<br><span class="hljs-attribute">ListenStream</span><span class="hljs-operator">=</span>端口号<br></code></pre></td></tr></table></figure><p>修改完成后，重新载入配置并重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl daemon-reload<br>systemctl restart ssh.socket<br></code></pre></td></tr></table></figure>          </div><p>修改完ssh配置后,先验证一下ssh配置是否有误</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sshd -t<br></code></pre></td></tr></table></figure><p>若配置正确，则不输出，若配置有误，则会输出配置中的错误<br>重新启动ssh服务以使修改生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart ssh<br></code></pre></td></tr></table></figure><p>未完待续…</p>]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
